name: Android Release

on:
  push:
    #branches: [ "master" ]
  pull_request:
    #branches: [ "master" ]

  workflow_dispatch:

jobs:
  version:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          ref: ${{ github.head_ref }}   # checkout the correct branch name
          fetch-depth: 0                # fetch the whole repo history

      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0
        with:
          versionSpec: '5.x'
      - name: Use GitVersion
        id: gitversion
        uses: gittools/actions/gitversion/execute@v0.9.7
      # 3
#      - name: Create version.txt with semVersion
#        run: echo ${{ steps.gitversion.outputs.nuGetVersion  }} > version.txt
      - name: Use the version and log
        run: |
          echo "nuGetVersion: ${{ steps.gitversion.outputs.nuGetVersion }}"
          echo "github head ref: ${{github.head_ref}}"
          echo ${{ steps.gitversion.outputs.nuGetVersion }} >>version.txt
          cat version.txt

      - name: Upload Debug
        run: echo "::debug::WE ARE IN UPLOAD"
      - name: Do we have file on system?
        run: echo "::debug::$(ls)"
      - name: Upload version.txt
        uses: actions/upload-artifact@v3
        with:
          name: gitversion
          path: version.txt
      

  build:
    name: Create Android Build
    needs: version
    runs-on: ubuntu-latest
    steps:
      - name: Build debug
        run: echo "::debug::WE ARE IN BUILD (Download)"
      - uses: actions/checkout@v3
      - name: Get version.txt
        uses: actions/download-artifact@v3
        with:
          name: gitversion
      - name: Do we have file
        run: echo "::debug::$(ls)"
      - name: Version number in file
        run: cat version.txt
      - name: does ls have console out
        run: ls
      - name: Create new file without newline char from version.txt
        run: tr -d '\n' < version.txt > version1.txt
      - name: Read version
        id: version
        uses: juliangruber/read-file-action@v1
        with:
          path: version1.txt
      - name: Update version in YAML
        run: sed -i 's/99.99.99+99/${{ steps.version.outputs.content }}+${{ github.run_number }}/g' pubspec.yaml
      - name: keystore value
        run: echo ${{secrets.KEYSTORE_BASE64}}
      - name: Create key.properties
        run: |
          echo "storeFile=${{ steps.android_keystore.outputs.filePath }}" > android/key.properties
          echo "storePassword=${{ secrets.STORE_PASSWORD }}" >> android/key.properties
          echo "keyPassword=${{ secrets.KEY_PASSWORD }}" >> android/key.properties
          echo "keyAlias=${{ secrets.KEY_ALIAS }}" >> android/key.properties
          echo "keyAlia=${{ secrets.KEYSTORE_BASE64 }}" >> android/key.properties
          cat android/key.properties
      - uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: "12.x"
          cache: gradle
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.0.0"
          channel: 'stable'
          cache: true

      - name: Get dependencies
        run: flutter pub get

      - name: Start Android Release Build
        run: flutter build appbundle

      - name: Upload Android Release
        uses: actions/upload-artifact@v2
        with:
          name: android-release
          path: build/app/outputs/bundle/release/app-release.aab

  deploy:
    name: Deploy Android Build
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Get Android Build from artifacts
        uses: actions/download-artifact@v2
        with:
          name: android-release
      - name: Release Build to internal track
        uses: r0adkll/upload-google-play@v1
        with:
          serviceAccountJsonPlainText: ${{ secrets.PLAYSTORE_ACCOUNT_KEY }}
          packageName: <YOUR_PACKAGE_NAME>
          releaseFiles: app-release.aab
          track: alpha
          status: completed